apply plugin: 'com.jfrog.bintray'

android.libraryVariants.all { variant ->
    def name = variant.buildType.name

    def javadoc = task("javadoc${variant.name.capitalize()}", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        destinationDir = rootProject.file("docs/api")
        source = variant.javaCompiler.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        doFirst {
            classpath = files(variant.javaCompiler.classpath.files) + files(ext.androidJar)
        }
        options.docletpath = [rootProject.file("./gradle/ExcludeDoclet.jar")]
        options.doclet = "me.grantland.doclet.ExcludeDoclet"

        options.linksOffline("http://d.android.com/reference", "${android.sdkDirectory}/docs/reference")
        options.links("http://boltsframework.github.io/docs/android/")

        exclude '**/BuildConfig.java'
        exclude '**/R.java'
        exclude '**/internal/**'
    }

    def javadocJar = task("javadocJar${variant.name.capitalize()}", type: Jar, dependsOn: "javadoc${variant.name.capitalize()}") {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts.add('archives', javadocJar)
}

//region Maven

apply plugin: 'maven'
apply plugin: 'signing'

def ossrhUsername = hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : System.getenv('CI_NEXUS_USERNAME')
def ossrhPassword = hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : System.getenv('CI_NEXUS_PASSWORD')


task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
}

// Requires apply plugin: 'com.jfrog.bintray'

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')

    publications = ["mavenAar"]

    publish = true
    pkg {
        repo = 'maven'
        name = 'com.parse:parse-android'
        userOrg = 'parse'
        licenses = ['BSD License']
        vcsUrl = 'https://github.com/parse-community/Parse-SDK-Android'
        version {
            name = project.version
            desc = projDescription
            released = new Date()
            vcsTag = project.version

            // Sonatype username/passwrod must be set for this operation to happen
            mavenCentralSync {
                sync = true
                user = ossrhUsername
                password = ossrhPassword
                close = '1' // release automatically
            }
        }
    }
}

// Create the publication with the pom configuration:
apply plugin: 'digital.wup.android-maven-publish'

def pomConfig = {
    licenses {
        license {
            name 'BSD License'
            url 'https://github.com/parse-community/Parse-SDK-Android/blob/master/LICENSE'
            distribution 'repo'
        }
    }

    scm {
        connection 'scm:git@github.com:parse-community/Parse-SDK-Android.git'
        developerConnection 'scm:git@github.com:parse-community/Parse-SDK-Android.git'
        url gitLink
    }

    developers {
        developer {
            id 'parse'
            name 'Parse'
        }
    }
}

publishing {
    publications {
        mavenAar(MavenPublication) {
            from components.android
            groupId group
            // We have to specify it here because otherwise Bintray's plugin will assume the artifact's name is Parse
            artifactId artifact
            artifacts = [androidSourcesJar, bundleRelease]
            version version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', projDescription)
                root.appendNode('name', projName)
                root.appendNode('url', gitLink)
                root.children().last() + pomConfig
            }
        }

    }
}

// End of Bintray plugin
